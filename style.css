* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;

  @media only screen and (min-width: 1140px) {
    font-size: 1vw;
  }
}

body {
  font-family: 'Oswald', sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
  line-height: 1.7;
}

button {
  background: none;
  border: none;
  font-family: inherit;
  font-weight: inherit;
  outline: none;
}

ul {
  list-style: none;
}

input,
select,
option {
  font-family: inherit;
  font-weight: inherit;
}

.container {
  align-items: center;
  background-image: url('./assets/space-bg.jpg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 150vw 150vh;
  display: flex;
  height: 100dvh;
  justify-content: center;
  overflow: hidden;
  position: relative;
  width: 100%;

  @media only screen and (min-width: 1140px) {
    background-size: 120vw 120vh;
  }
}

.contentWrapper {
  align-items: center;
  display: flex;
  gap: 1rem;
  justify-content: center;
  padding-bottom: 12rem;

  @media only screen and (min-width: 1140px) {
    gap: 3rem;
    padding-bottom: initial;
    padding-left: 50rem;
  }
}

.arrow {
  cursor: pointer;
  transition: scale 0.3s ease;
  z-index: 1;

  &.clicked {
    scale: 0.8;
  }

  &.previousButton {
    transform: translateX(calc(100% + 1rem)) rotate(-90deg);

    @media only screen and (min-width: 1140px) {
      transform: rotate(-90deg);
    }
  }

  &.nextButton {
    transform: translateX(calc(-100% - 1rem)) rotate(90deg);

    @media only screen and (min-width: 1140px) {
      transform: rotate(90deg);
    }
  }
}

.arrowIcon {
  filter: invert(1);
  user-select: none;
  width: 3rem;
}

.sliderNav {
  display: none;

  @media only screen and (min-width: 1140px) {
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    position: absolute;
    right: 1%;
    z-index: 1;
  }
}

.navButton {
  background-color: white;
  border-radius: 3rem;
  cursor: pointer;
  height: 0.3rem;
  opacity: 0.28;
  transform-origin: right;
  transition: ease-in-out 0.3s;
  transition-property: background-color, opacity, transform;
  width: 1.2rem;

  &.isActive {
    background-color: yellow;
  }

  &:hover,
  &.isActive {
    opacity: 0.8;
    transform: scaleX(1.5);
  }
}

.sliderWrapper {
  position: relative;
  width: 100vw;

  @media only screen and (min-width: 1140px) {
    width: 25rem;
  }
}

.slider {
  left: 50%;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  transition: opacity 0s 0.5s;
  width: 100%;

  @media only screen and (min-width: 1140px) {
    left: 0;
    transform: translateY(-50%);
    width: auto;
  }

  &.isActive {
    opacity: 1;
    pointer-events: auto;
  }
}

.planetImage {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.7s ease;
  user-select: none;
  width: 80rem;

  .slider.isActive & {
    transform: translate(-50%, -12%) scale(0.5);
    transition-delay: 0.3s;

    @media only screen and (min-width: 1140px) {
      transform: translate(-125%, -30%) scale(1);
    }
  }
}

.content {
  color: white;
  text-align: center;
  width: 100%;

  @media only screen and (min-width: 1140px) {
    text-align: left;
  }
}

.title {
  font-size: 4rem;
  font-weight: 600;
  opacity: 0;
  transition: 0.7s ease;
  transition-property: transform, opacity;

  @media only screen and (min-width: 1140px) {
    font-size: 5rem;
  }

  .next & {
    transform: translateX(100%);
  }

  .previous & {
    transform: translateX(-100%);
  }

  .slider.isActive & {
    opacity: 1;
    transform: translateX(0);
    transition-delay: 0.3s;
  }
}

.description {
  font-size: 1.3rem;
  margin-top: 1rem;
  opacity: 0;
  transition: 0.7s ease 0.2s;
  transition-property: transform, opacity;

  @media only screen and (min-width: 1140px) {
    font-size: 1.8rem;
  }

  .next & {
    transform: translateX(100%);
  }

  .previous & {
    transform: translateX(-100%);
  }

  .slider.isActive & {
    opacity: 1;
    transform: translateX(0);
    transition-delay: 0.5s;
  }
}

.apiCredits {
  bottom: 2%;
  color: white;
  font-size: 1.3rem;
  position: absolute;
  text-align: center;
  text-shadow: 0 5px 3px hsla(0, 0%, 0%, 0.9);

  @media only screen and (min-width: 1140px) {
    bottom: 1%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.apiCredits a {
  color: yellow;
}

.modalButton {
  background-color: yellow;
  border-radius: 4rem;
  border: 1px solid yellow;
  cursor: pointer;
  font-size: 1.3rem;
  font-weight: 400;
  padding: 0.5rem 1.8rem;
  position: absolute;
  right: 50%;
  top: 3vh;
  transform: translateX(50%);
  white-space: nowrap;
  z-index: 1;

  @media only screen and (min-width: 1140px) {
    right: 1%;
    transform: translateX(0%);
  }

  @media (any-hover: hover) {
    transition: 0.3s ease;
    transition-property: background-color, color;
  }

  &:hover {
    @media (any-hover: hover) {
      background-color: transparent;
      color: yellow;
    }
  }
}

.modalIcon {
  padding-right: 0.5rem;
  scale: 0.7;
}

.modalBackground {
  background-color: black;
  height: 100%;
  left: 0;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  transition: opacity 0.3s ease;
  user-select: none;
  width: 100%;
  z-index: 2;

  &.isVisible {
    opacity: 0.7;
    pointer-events: all;
  }
}

.modal {
  align-items: center;
  background-color: rgb(24, 30, 39);
  border-radius: 0.5rem;
  box-shadow: 0 0.4rem 0.4rem hsla(0, 0%, 0%, 0.7);
  color: white;
  display: flex;
  flex-direction: column;
  font-size: 1rem;
  left: 50%;
  max-height: 91vh;
  opacity: 0;
  overflow: auto;
  padding: 1.5rem;
  pointer-events: none;
  position: absolute;
  text-align: center;
  top: 50%;
  transform: translate(-50%, -50%);
  transition: opacity 0.3s ease;
  width: 91%;
  z-index: 2;

  @media only screen and (min-width: 1140px) {
    width: 30%;
  }

  &.isVisible {
    opacity: 1;
    pointer-events: all;
  }

  &::-webkit-scrollbar {
    background-color: transparent;
    width: 2px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: yellow;
    border-radius: 2px;
  }
}

.modalCloseButton {
  border-radius: 50%;
  border: 1px solid;
  color: white;
  cursor: pointer;
  height: 2rem;
  padding: 0.3rem;
  position: absolute;
  right: 3%;
  top: 3%;
  width: 2rem;
}

.modalTitle {
  font-size: 1.4rem;
  font-weight: 600;
  text-align: center;
  padding: 0 3rem;

  @media only screen and (min-width: 1140px) {
    padding: 0 7rem;
  }
}

.form {
  display: flex;
  flex-direction: column;
  margin-top: 1.4rem;
  width: 100%;

  @media only screen and (min-width: 1140px) {
    width: 90%;
  }
}

.question {
  &:not(:first-child) {
    margin-top: 1.2rem;
  }
}

.inputValidate {
  border: none;
  outline: none;

  &:valid {
    box-shadow: 0 3px cornflowerblue;
  }

  &:invalid {
    box-shadow: 0 3px coral;
  }

  .inputRadiosContainer & {
    background-color: initial;
    border-radius: initial;
    line-height: initial;
    padding: initial;
    box-shadow: initial;
  }
}

.inputBar {
  background-color: rgb(16, 20, 26);
  border-radius: 0.6rem;
  color: white;
  font-size: 1rem;
  line-height: 2;
  margin-top: 0.5rem;
  padding: 0.5rem 1.2rem;
  width: 100%;
}

.inputOption {
  font-weight: 200;
}

.errorMessage {
  color: coral;
  display: none;
  margin-top: 0.5rem;

  &.isVisible {
    display: block;
  }

  .inputValidate:valid + &,
  .inputRadiosContainer:has(.inputValidate:valid) + & {
    display: none;
  }
}

.inputRadiosContainer {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

.inputRadioWrapper {
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.inputRadioLight {
  accent-color: cornflowerblue;
}

.inputRadioDark {
  accent-color: coral;
}

.submitButton {
  background-color: yellow;
  border-radius: 0.6rem;
  border: 2px solid yellow;
  box-shadow: 0 3px hsla(0, 0%, 0%, 0.1);
  color: black;
  cursor: pointer;
  font-size: 1.4rem;
  font-weight: 400;
  margin-top: 2rem;
  padding: 1rem 2.5rem;
  text-transform: uppercase;
  transition: 0.3s ease;
  transition-property: background-color, color;
  width: 100%;
}

.submitButton:hover {
  background-color: transparent;
  color: yellow;
}

.shake {
  animation: shake 0.15s;
  animation-iteration-count: 5;
}

@keyframes shake {
  00% {
    transform: rotate(-2deg);
  }
  100% {
    transform: rotate(2deg);
  }
}

.notificationBar {
  border-radius: 1.6rem 1.6rem 1.6rem 0;
  border: none;
  color: white;
  left: 50%;
  padding: 2rem;
  font-size: 1.2rem;
  font-weight: 300;
  top: 3%;
  transform: translateX(-50%);
  z-index: 2;
  width: 91%;

  @media only screen and (min-width: 1140px) {
    width: 40%;
  }
}

.closeResultButton {
  background-color: white;
  border-radius: 50%;
  cursor: pointer;
  height: 2rem;
  padding: 0.3rem;
  position: absolute;
  right: -1%;
  top: -7%;
  width: 2rem;
}
